# This is a basic workflow to help you get started with Actions

name: Build


# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  workflow_call:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildLinux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.7

      - name: Cache Haxe dependencies
        uses: actions/cache@v3
        id: cache-haxe
        with:
          path: |
            ~/.haxe
            ~/.haxelib
            ~/haxelib
          key: ${{ runner.os }}-haxe-${{ hashFiles('Project.xml', '**/haxelib.json') }}

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.7
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          sudo apt-get install libvlc-dev
          sudo apt-get install libvlccore-dev
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          chmod +x ./setup/unix.sh
          sh ./setup/unix.sh

      # Cache build artifacts with better key
      - name: Cache build artifacts
        uses: actions/cache@v3
        id: cache-build
        with:
          path: |
            export/release/linux
            .haxe_build
          key: ${{ runner.os }}-build-${{ hashFiles('source/**/*.hx', 'Project.xml') }}

      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build Project.xml linux 
      - name: Publish Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: linuxBuild
          path: 'export/release/linux/bin'
  buildWindows:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.7
   # Cache for Windows
      - name: Cache Haxe dependencies
        uses: actions/cache@v3
        id: cache-haxe-win
        with:
          path: |
            C:\haxelib
            ${{ env.USERPROFILE }}\.haxe
            ${{ env.USERPROFILE }}\.haxelib
          key: ${{ runner.os }}-haxe-${{ hashFiles('Project.xml', '**/haxelib.json') }}

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.7
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup C:/haxelib
          haxelib install hxcpp > /dev/null --quiet
          .\"setup/windows.bat"
        shell: cmd

      # Cache Windows build artifacts
      - name: Cache build artifacts
        uses: actions/cache@v3
        id: cache-build-win
        with:
          path: |
            export\release\windows
            .haxe_build
          key: ${{ runner.os }}-build-${{ hashFiles('source/**/*.hx', 'Project.xml') }}

      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build windows
      - name: Publish Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: windowsBuild
          path: export/release/windows/bin
  buildMac:
    runs-on: macos-15

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.7	
      - name: Cache Haxe dependencies
        uses: actions/cache@v3
        id: cache-haxe-mac
        with:
          path: |
            ~/.haxe
            ~/.haxelib
            ~/haxelib
          key: ${{ runner.os }}-haxe-${{ hashFiles('Project.xml', '**/haxelib.json') }}

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.7
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          chmod +x ./setup/unix.sh
          sh ./setup/unix.sh

  # Cache MacOS build artifacts
      - name: Cache build artifacts
        uses: actions/cache@v3
        id: cache-build-mac
        with:
          path: |
            export/release/macos
            .haxe_build
          key: ${{ runner.os }}-build-${{ hashFiles('source/**/*.hx', 'Project.xml') }}

      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build mac
      - name: Publish Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: macBuild
          path: export/release/macos/bin