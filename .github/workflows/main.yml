name: Build

on:
  push:
    branches: [ main]
  pull_request:
    branches: [ main]
  workflow_dispatch:

jobs:
  buildLinux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache Haxe dependencies
        uses: actions/cache@v3
        id: cache-haxe
        with:
          path: |
            ~/.haxe
            ~/.haxelib
            ~/haxelib
          key: ${{ runner.os }}-haxe-${{ hashFiles('Project.xml', '**/haxelib.json') }}

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libvlc-dev libvlccore-dev
          if ! command -v g++-12 &> /dev/null; then
            sudo apt-get install -y g++-12
          fi

      - name: Install Haxelib
        run: |
          mkdir -p ~/haxelib
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          chmod +x ./setup/unix.sh
          ./setup/unix.sh

      # Cache build artifacts with better key
      - name: Cache build artifacts
        uses: actions/cache@v3
        id: cache-build
        with:
          path: |
            export/release/linux
            .haxe_build
          key: ${{ runner.os }}-build-${{ hashFiles('source/**/*.hx', 'Project.xml') }}

      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION

      - name: Compile
        run: haxelib run lime build Project.xml linux

      - name: Publish Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linuxBuild
          path: export/release/linux/bin

  buildWindows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      # Cache for Windows
      - name: Cache Haxe dependencies
        uses: actions/cache@v3
        id: cache-haxe-win
        with:
          path: |
            C:\haxelib
            ${{ env.USERPROFILE }}\.haxe
            ${{ env.USERPROFILE }}\.haxelib
          key: ${{ runner.os }}-haxe-${{ hashFiles('Project.xml', '**/haxelib.json') }}

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Install Haxelib
        run: |
          mkdir C:\haxelib
          haxelib setup C:\haxelib
          haxelib install hxcpp > nul
          .\setup\windows.bat

      # Cache Windows build artifacts
      - name: Cache build artifacts
        uses: actions/cache@v3
        id: cache-build-win
        with:
          path: |
            export\release\windows
            .haxe_build
          key: ${{ runner.os }}-build-${{ hashFiles('source/**/*.hx', 'Project.xml') }}

      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION

      - name: Compile
        run: haxelib run lime build Project.xml windows

      - name: Publish Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windowsBuild
          path: export\release\windows\bin

  buildMac:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache Haxe dependencies
        uses: actions/cache@v3
        id: cache-haxe-mac
        with:
          path: |
            ~/.haxe
            ~/.haxelib
            ~/haxelib
          key: ${{ runner.os }}-haxe-${{ hashFiles('Project.xml', '**/haxelib.json') }}

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Install Haxelib
        run: |
          mkdir -p ~/haxelib
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          chmod +x ./setup/unix.sh
          ./setup/unix.sh

      # Cache MacOS build artifacts
      - name: Cache build artifacts
        uses: actions/cache@v3
        id: cache-build-mac
        with:
          path: |
            export/release/macos
            .haxe_build
          key: ${{ runner.os }}-build-${{ hashFiles('source/**/*.hx', 'Project.xml') }}

      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION

      - name: Compile
        run: haxelib run lime build Project.xml macos

      - name: Publish Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macBuild
          path: export/release/macos/bin